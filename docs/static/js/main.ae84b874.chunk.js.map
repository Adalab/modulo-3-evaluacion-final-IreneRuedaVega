{"version":3,"sources":["services/getDataFromApi.js","images/logo.png","components/Header.js","images/dead.png","components/characters/CharacterCard.js","components/characters/CharacterList.js","components/filters/FilterByName.js","components/filters/Filters.js","components/characters/CharacterDetail.js","components/App.js","reportWebVitals.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","id","name","status","species","origin","episodes","episode","length","gender","image","Header","className","src","Logo","alt","CharacterCard","props","dead","iconDead","to","CharacterList","charactersElements","characters","prototype","PropTypes","array","FilterByName","htmlFor","type","placeholder","value","nameFilter","onChange","ev","handleFilter","target","key","Filters","onSubmit","preventDefault","ChracterDetail","console","log","App","useState","setCharacters","setNameFilter","useEffect","sort","a","b","filteredCharacters","filter","toUpperCase","includes","exact","path","component","match","routeCharacterId","parseInt","params","find","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae84b874.chunk.js","sourcesContent":["const getDataFromApi = () => {\r\n  return fetch(\r\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      //Ya tengo el array que puedo iterar console.log(data.results); */\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          status: character.status,\r\n          species: character.species,\r\n          origin: character.origin.name,\r\n          episodes: character.episode.length,\r\n          gender: character.gender,\r\n          image: character.image,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import React from \"react\";\r\nimport Logo from \"../images/logo.png\";\r\nimport \"../stylesheets/Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <h1 className=\"container__title\">Tu buscador de personajes de</h1>\r\n        <img className=\"container__img\" src={Logo} alt=\"Logo de Rick y Morty\" />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/dead.ba5073d6.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../stylesheets/CharacterCard.scss\";\r\nimport iconDead from \"../../images/dead.png\";\r\n\r\nconst CharacterCard = (props) => {\r\n  const dead = props.status === \"Dead\" ? iconDead : null;\r\n  return (\r\n    <Link to={`/character/${props.id}`}>\r\n      <li key={props.id} className=\"card\" id={props.id}>\r\n        <div className=\"card__box\">\r\n          <img\r\n            className=\"card__box--img\"\r\n            src={props.image}\r\n            alt={`Foto de ${props.name}`}\r\n          />\r\n        </div>\r\n        <div className=\"card__description\">\r\n          <h4 className=\"card__description--title\">{props.name}</h4>\r\n          <div className=\"card__description--species\">\r\n            <h4>{props.species}</h4>\r\n          </div>\r\n          <div>\r\n            <img className=\"icon\" src={`${dead}`} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </Link>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  specie: PropTypes.string,\r\n  image: PropTypes.string,\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport \"../../stylesheets/CharacterList.scss\";\r\n\r\nconst CharacterList = (props) => {\r\n  const charactersElements = props.characters.map((character) => {\r\n    return (\r\n      <CharacterCard\r\n        key={character.id}\r\n        id={character.id}\r\n        name={character.name}\r\n        image={character.image}\r\n        species={character.species}\r\n        status={character.status}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <ul className=\"cardList\">{charactersElements}</ul>;\r\n};\r\n\r\nCharacterList.prototype = {\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\nimport \"../../stylesheets/Filters.scss\";\r\n\r\nconst FilterByName = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"nameFilter\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label className=\"form__label\" htmlFor=\"name\">\r\n        Filtrar por nombre:\r\n      </label>\r\n      <input\r\n        className=\"form__input-text\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        placeholder=\"Busca tu personaje favorito\"\r\n        value={props.nameFilter}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import React from \"react\";\r\nimport FilterByName from \"./FilterByName\";\r\nimport \"../../stylesheets/Filters.scss\";\r\n\r\nconst Filters = (props) => {\r\n  const preventEvent = (ev) => {\r\n    ev.preventDefault(ev);\r\n  };\r\n  return (\r\n    <section>\r\n      <form className=\"form\" onSubmit={preventEvent}>\r\n        <FilterByName\r\n          handleFilter={props.handleFilter}\r\n          nameFilter={props.nameFilter}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport \"../../stylesheets/CharacterDetail.scss\";\r\n\r\nconst ChracterDetail = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"modal modal__hidden_\">\r\n      <div>\r\n        <img src=\"\" alt=\"\" />\r\n      </div>\r\n      <div>\r\n        <span>\r\n          <h3>Nombre del personaje:</h3>\r\n          <p>{props.name}</p>\r\n        </span>\r\n        <span>\r\n          <h4>Especie:</h4>\r\n          <p></p>\r\n        </span>\r\n        <span>\r\n          <h4>Origen:</h4>\r\n          <p></p>\r\n        </span>\r\n        <span>\r\n          <h4>Status:</h4>\r\n          <p></p>\r\n        </span>\r\n        <span>\r\n          <h4>Episodios</h4>\r\n          <p></p>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChracterDetail;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheets/App.scss\";\nimport getDataFromApi from \"../services/getDataFromApi\";\nimport Header from \"./Header\";\nimport CharacterList from \"./characters/CharacterList\";\nimport Filters from \"./filters/Filters\";\nimport CharacterDetail from \"./characters/CharacterDetail\";\n\nconst App = () => {\n  //states\n  const [characters, setCharacters] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n\n  //montaje\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []); // con este array vacío le decimos a React que solo ejecute este useEffect una vez. Ahora solo pedimos los datos al arrancar.\n\n  //event handlers\n  const handleFilter = (data) => {\n    if (data.key === \"nameFilter\") {\n      setNameFilter(data.value);\n    }\n  };\n\n  //Organizar los personajes por orden alfabético\n\n  characters.sort(function (a, b) {\n    if (a.name < b.name) return -1;\n    if (a.name > b.name) return 1;\n    return 0;\n  });\n\n  //Filtrado de personajes\n  const filteredCharacters = characters.filter((character) => {\n    return character.name.toUpperCase().includes(nameFilter.toUpperCase());\n  });\n\n  const renderCharacterDetail = (props) => {\n    console.log(\"Entro en la función\");\n    console.log(props.match);\n    const routeCharacterId = parseInt(props.match.params.id);\n    console.log(routeCharacterId);\n    const character = characters.find((character) => {\n      return character.id === routeCharacterId;\n    });\n    if (character) {\n      return (\n        <CharacterDetail\n          name={character.name}\n          image={character.image}\n          species={character.species}\n          gender={character.gender}\n          origin={character.origin}\n          status={character.status}\n          episodes={character.episodes}\n        />\n      );\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Filters nameFilter={nameFilter} handleFilter={handleFilter} />\n      <Switch>\n        <Route exact path=\"/\">\n          <main className=\"main\">\n            <CharacterList\n              characters={filteredCharacters}\n              nameFilter={nameFilter}\n            />\n          </main>\n        </Route>\n        <Route path=\"/character/:id\" component={renderCharacterDetail} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}