{"version":3,"sources":["services/getDataFromApi.js","images/logo.png","components/Header.js","components/characters/CharacterCard.js","components/characters/CharacterList.js","components/filters/FilterByName.js","components/filters/Filters.js","components/App.js","reportWebVitals.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","id","name","status","species","origin","episodes","episode","length","gender","image","Header","className","src","Logo","alt","CharacterCard","props","CharacterList","charactersElements","characters","prototype","PropTypes","array","FilterByName","htmlFor","type","placeholder","value","nameFilter","onChange","ev","handleFilter","target","key","Filters","onSubmit","preventDefault","App","useState","setCharacters","setNameFilter","useEffect","filteredCharacters","filter","toUpperCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.230170af.chunk.js","sourcesContent":["const getDataFromApi = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character/\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      //Ya tengo el array que puedo iterar console.log(data.results); */\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          status: character.status,\r\n          species: character.species,\r\n          origin: character.origin.name,\r\n          episodes: character.episode.length,\r\n          gender: character.gender,\r\n          image: character.image,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import React from \"react\";\r\nimport Logo from \"../images/logo.png\";\r\nimport \"../stylesheets/Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <h1 className=\"container__title\">Tu buscador de personajes de</h1>\r\n        <img className=\"container__img\" src={Logo} alt=\"Logo de Rick y Morty\" />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../stylesheets/CharacterCard.scss\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <li className=\"card\" id={props.id}>\r\n      <div className=\"card__box\">\r\n        <img\r\n          className=\"card__box--img\"\r\n          src={props.image}\r\n          alt={`Foto de ${props.name}`}\r\n        />\r\n      </div>\r\n      <div className=\"card__description\">\r\n        <h4 className=\"card__description--title\">{props.name}</h4>\r\n        <div className=\"card__description--species\">\r\n          <h4>{props.species}</h4>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  specie: PropTypes.string,\r\n  image: PropTypes.string,\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport \"../../stylesheets/CharacterList.scss\";\r\n\r\nconst CharacterList = (props) => {\r\n  const charactersElements = props.characters.map((character) => {\r\n    return (\r\n      <CharacterCard\r\n        key={character.id}\r\n        id={character.id}\r\n        name={character.name}\r\n        image={character.image}\r\n        species={character.species}\r\n        status={character.status}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <ul className=\"cardList\">{charactersElements}</ul>;\r\n};\r\n\r\nCharacterList.prototype = {\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\nimport \"../../stylesheets/Filters.scss\";\r\n\r\nconst FilterByName = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"nameFilter\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label className=\"form__label\" htmlFor=\"name\">\r\n        Filtrar por nombre:\r\n      </label>\r\n      <input\r\n        className=\"form__input-text\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        placeholder=\"Busca tu personaje favorito\"\r\n        value={props.nameFilter}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import React from \"react\";\r\nimport FilterByName from \"./FilterByName\";\r\nimport \"../../stylesheets/Filters.scss\";\r\n\r\nconst Filters = (props) => {\r\n  const preventEvent = (ev) => {\r\n    ev.preventDefault(ev);\r\n  };\r\n  return (\r\n    <section>\r\n      <form className=\"form\" onSubmit={preventEvent}>\r\n        <FilterByName\r\n          handleFilter={props.handleFilter}\r\n          nameFilter={props.nameFilter}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"../stylesheets/App.scss\";\nimport getDataFromApi from \"../services/getDataFromApi\";\nimport Header from \"./Header\";\nimport CharacterList from \"./characters/CharacterList\";\nimport Filters from \"./filters/Filters\";\n\nconst App = () => {\n  //states\n  const [characters, setCharacters] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n\n  //montaje\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []); // con este array vacÃ­o le decimos a React que solo ejecute este useEffect una vez. Ahora solo pedimos los datos al arrancar.\n\n  //event handlers\n\n  const handleFilter = (data) => {\n    if (data.key === \"nameFilter\") {\n      setNameFilter(data.value);\n    }\n  };\n\n  //Filtrado de personajes\n  const filteredCharacters = characters.filter((character) => {\n    return character.name.toUpperCase().includes(nameFilter.toUpperCase());\n  });\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Filters nameFilter={nameFilter} handleFilter={handleFilter} />\n      <main className=\"main\">\n        <CharacterList\n          characters={filteredCharacters}\n          nameFilter={nameFilter}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}